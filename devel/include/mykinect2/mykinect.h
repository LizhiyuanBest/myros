// Generated by gencpp from file mykinect2/mykinect.msg
// DO NOT EDIT!


#ifndef MYKINECT2_MESSAGE_MYKINECT_H
#define MYKINECT2_MESSAGE_MYKINECT_H

#include <ros/service_traits.h>


#include <mykinect2/mykinectRequest.h>
#include <mykinect2/mykinectResponse.h>


namespace mykinect2
{

struct mykinect
{

typedef mykinectRequest Request;
typedef mykinectResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct mykinect
} // namespace mykinect2


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::mykinect2::mykinect > {
  static const char* value()
  {
    return "319cb1a6c7295383f681d62479bb9e3a";
  }

  static const char* value(const ::mykinect2::mykinect&) { return value(); }
};

template<>
struct DataType< ::mykinect2::mykinect > {
  static const char* value()
  {
    return "mykinect2/mykinect";
  }

  static const char* value(const ::mykinect2::mykinect&) { return value(); }
};


// service_traits::MD5Sum< ::mykinect2::mykinectRequest> should match 
// service_traits::MD5Sum< ::mykinect2::mykinect > 
template<>
struct MD5Sum< ::mykinect2::mykinectRequest>
{
  static const char* value()
  {
    return MD5Sum< ::mykinect2::mykinect >::value();
  }
  static const char* value(const ::mykinect2::mykinectRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::mykinect2::mykinectRequest> should match 
// service_traits::DataType< ::mykinect2::mykinect > 
template<>
struct DataType< ::mykinect2::mykinectRequest>
{
  static const char* value()
  {
    return DataType< ::mykinect2::mykinect >::value();
  }
  static const char* value(const ::mykinect2::mykinectRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::mykinect2::mykinectResponse> should match 
// service_traits::MD5Sum< ::mykinect2::mykinect > 
template<>
struct MD5Sum< ::mykinect2::mykinectResponse>
{
  static const char* value()
  {
    return MD5Sum< ::mykinect2::mykinect >::value();
  }
  static const char* value(const ::mykinect2::mykinectResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::mykinect2::mykinectResponse> should match 
// service_traits::DataType< ::mykinect2::mykinect > 
template<>
struct DataType< ::mykinect2::mykinectResponse>
{
  static const char* value()
  {
    return DataType< ::mykinect2::mykinect >::value();
  }
  static const char* value(const ::mykinect2::mykinectResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // MYKINECT2_MESSAGE_MYKINECT_H
